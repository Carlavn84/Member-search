{"remainingRequest":"/home/duong/Projects/inhousefilming/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/duong/Projects/inhousefilming/src/components/utils/SearchBox.vue?vue&type=style&index=0&id=53e5e2a5&lang=scss&scoped=true&","dependencies":[{"path":"/home/duong/Projects/inhousefilming/src/components/utils/SearchBox.vue","mtime":1632227509122},{"path":"/home/duong/Projects/inhousefilming/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/duong/Projects/inhousefilming/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/duong/Projects/inhousefilming/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/duong/Projects/inhousefilming/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/duong/Projects/inhousefilming/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/duong/Projects/inhousefilming/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNlYXJjaC1ib3ggewogIHBvc2l0aW9uOiByZWxhdGl2ZTsgLy8gZm9yIGRyb3AtZG93biB0byB0YWtlIHRoZSByaWdodCB3aWR0aAp9Cgouc2VhcmNoLWlucHV0IHsKICB3aWR0aDogY2FsYygxMDAlIC0gMjBweCk7Cn0KCi5oaWdobGlnaHRlZC10ZXh0IHsKICBmb250LXdlaWdodDogYm9sZDsKfQoKLmRyb3Bkb3duLWxpc3QgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7CiAgbWF4LWhlaWdodDogMzAwcHg7CiAgbWFyZ2luLXRvcDogMHB4OwogIG92ZXJmbG93LXk6IGF1dG87CiAgYmFja2dyb3VuZDogJGNvbG9yLXdoaXRlOwogIGJvcmRlci1yYWRpdXM6IDhweDsKICB6LWluZGV4OiA5OTk5OTsKICBjb2xvcjogJGNvbG9yLXB1cnBsZTsKICBwYWRkaW5nOiAyMHB4Owp9CgouZHJvcGRvd24tbGlzdCBsaSB7CiAgbWFyZ2luOiAxMHB4OwogIGN1cnNvcjogcG9pbnRlcjsKfQoKLmRyb3Bkb3duLWxpc3QgbGk6aG92ZXIgewogIG1hcmdpbi1sZWZ0OiAxNXB4Owp9Cg=="},{"version":3,"sources":["SearchBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"SearchBox.vue","sourceRoot":"src/components/utils","sourcesContent":["<template>\n  <div class=\"search-box\">\n    <form @submit.prevent=\"filter\">\n      <input\n        type=\"text\"\n        class=\"search-input\"\n        autocomplete=\"off\"\n        v-model.trim=\"search\"\n      />\n    </form>\n\n    <div class=\"dropdown-list\" v-show=\"showDropdown\">\n      <ul>\n        <li v-for=\"item in highlightedItems(results)\" :key=\"item.id\"\n            @click=\"itemClicked(item)\">\n          {{ item.highlight[0] }}<span class=\"highlighted-text\" >{{ item.highlight[1] }}</span>{{ item.highlight[2] }}\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"Autocomplete\",\n\n  props: [\"items\"],\n\n  data() {\n    return {\n      search: '',\n      selectedItem: null,\n      results: [],\n    };\n  },\n\n  methods: {\n\n    filter() {\n      // only start searching from at least 3 characters length, as the design looks that way (not clear if it should be 3 or 4)\n      // however, that can be a problem with my last name...\n      if (this.search.length < 3) {\n        this.results = [];\n      } else {\n        this.results = this.items.filter((it) =>\n            `${ it.text }`.toLowerCase().includes(this.search.toLowerCase()) ||\n            `${ it.search }`.toLowerCase().includes(this.search.toLowerCase())\n            // backticks make sure it's always a string\n        );\n      }\n    },\n\n    itemClicked(item) {\n      this.search = item.text;\n      this.selectedItem = item;\n    },\n\n    // split item texts into an array: [\"beginning\", \"part to highlight\", \"end\"]\n    highlightedItems(items) {\n      return items.map( it => {\n        const startPosition = `${ it.text }`.toLowerCase().indexOf(this.search.toLowerCase());\n        const endPosition = startPosition + this.search.length;\n        const extendedItem = it;\n\n        if (startPosition === -1)\n          extendedItem.highlight = [it.text, \"\", \"\"]; // nothing to highlight, the search value must be in an invisible field\n        else\n          extendedItem.highlight =\n            [\n              it.text.slice(0, startPosition),\n              it.text.slice(startPosition, endPosition),\n              it.text.slice(endPosition)\n            ];\n\n        return extendedItem;\n      });\n    },\n  },\n\n  computed: {\n    showDropdown() {\n      // show only if there are results and we did not select anything yet\n      return this.results.length > 0 && this.selectedItem === null;\n    },\n  },\n\n  watch: {\n    search() {\n      this.filter();\n\n      // if the search text gets changed after selecting something, reset selection\n      if (this.selectedItem !== null && this.search !== this.selectedItem.text) {\n        this.selectedItem = null;\n      }\n    },\n\n    selectedItem() {\n      this.$emit('item-selected', this.selectedItem ? this.selectedItem.id : null);\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .search-box {\n    position: relative; // for drop-down to take the right width\n  }\n\n  .search-input {\n    width: calc(100% - 20px);\n  }\n\n  .highlighted-text {\n    font-weight: bold;\n  }\n\n  .dropdown-list {\n    position: absolute;\n    width: calc(100% - 40px);\n    max-height: 300px;\n    margin-top: 0px;\n    overflow-y: auto;\n    background: $color-white;\n    border-radius: 8px;\n    z-index: 99999;\n    color: $color-purple;\n    padding: 20px;\n  }\n\n  .dropdown-list li {\n    margin: 10px;\n    cursor: pointer;\n  }\n\n  .dropdown-list li:hover {\n    margin-left: 15px;\n  }\n</style>\n"]}]}